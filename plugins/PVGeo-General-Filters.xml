<ServerManagerConfiguration>
  <!-- CATEGORY FILTERS -->
  <ProxyGroup name="filters">


    <!-- ./filters-general//filter_append_tables.py -->
    <SourceProxy
      name="CombineTables"
      class="vtkPythonProgrammableFilter"
      label="Combine Tables"
      input_ports="2">
      <Documentation
        long_help="Takes two tables and combines them if they have the same number of rows."
        short_help="Takes two tables and combines them if they have the same number of rows.">
      </Documentation>
      <Hints>
        <ShowInMenu category="PVGeo General Filters" />
      </Hints>

      <!-- Built on version: 0.7.4 -->
      <StringVectorProperty
        panel_visibility="never"
        name="BUILDVERSION"
        label="BUILDVERSION"
        initial_string="BUILDVERSION"
        command="SetParameter"
        animateable="1"
        default_values="0.7.4"
        number_of_elements="1">
        <Documentation>This is an attribute to the filter to know what version it was built on. This is necessary for plugins that have major changes across versions and might need to alert a user that their state file is out of date.</Documentation>
      </StringVectorProperty>

      <!-- Output data type: "vtkTable" -->
      <IntVectorProperty command="SetOutputDataSetType"
        default_values="19"
        name="OutputDataSetType"
        number_of_elements="1"
        panel_visibility="never">
        <Documentation>The value of this property determines the dataset type
        for the output of the programmable filter.</Documentation>
      </IntVectorProperty>


      <InputProperty
        name="Input Table 1"
        command="SetInputConnection"
        port_index="0">
          <ProxyGroupDomain name="groups">
            <Group name="sources"/>
            <Group name="filters"/>
          </ProxyGroupDomain>

          <DataTypeDomain name="input_type">
            <DataType value="vtkTable"/>
          </DataTypeDomain>
      </InputProperty>

      <InputProperty
        name="Input Table 2"
        command="SetInputConnection"
        port_index="1">
          <ProxyGroupDomain name="groups">
            <Group name="sources"/>
            <Group name="filters"/>
          </ProxyGroupDomain>

          <DataTypeDomain name="input_type">
            <DataType value="vtkTable"/>
          </DataTypeDomain>
      </InputProperty>




      <StringVectorProperty
        name="Script"
        command="SetScript"
        number_of_elements="1"
        default_values="from vtk.util import numpy_support as nps&#xA;import PVGeo._helpers as inputhelp&#xA;pdo = self.GetOutput() # VTK Data Type&#xA;# Inputs from different ports:&#xA;pdi0 = self.GetInputDataObject(0, 0) # PORT 0&#xA;pdi1 = self.GetInputDataObject(1, 0) # PORT 1&#xA;&#xA;pdo.DeepCopy(pdi0)&#xA;&#xA;# Get number of columns&#xA;ncols1 = pdi1.GetNumberOfColumns()&#xA;# Get number of rows&#xA;nrows = pdi0.GetNumberOfRows()&#xA;nrows1 = pdi1.GetNumberOfRows()&#xA;if (nrows != nrows1):&#xA;    raise RuntimeError('These tables do not have the same number of rows.')&#xA;&#xA;for i in range(pdi1.GetRowData().GetNumberOfArrays()):&#xA;    arr = pdi1.GetRowData().GetArray(i)&#xA;    pdo.GetRowData().AddArray(arr)&#xA;"
        panel_visibility="advanced">
        <Hints>
          <Widget type="multi_line" syntax="python"/>
        </Hints>
        <Documentation>This property contains the text of a python program that
        the programmable source runs.</Documentation>
        </StringVectorProperty>



      <StringVectorProperty
        command="SetPythonPath"
        name="PythonPath"
        number_of_elements="1"
        panel_visibility="advanced">
        <Documentation>A semi-colon (;) separated list of directories to add to
        the python library search path.</Documentation>
      </StringVectorProperty>
    </SourceProxy>

    <!-- ./filters-general//filter_reshape_table.py -->
    <SourceProxy
      name="ReshapeTable"
      class="vtkPythonProgrammableFilter"
      label="Reshape Table">
      <Documentation
        long_help="This filter will take a vtkTable object and reshape it. This filter essentially treats vtkTables as 2D matrices and reshapes them using numpy.reshape in a C contiguous manner. Unfortunately, data fields will be renamed arbitrarily because VTK data arrays require a name."
        short_help="This filter will take a vtkTable object and reshape it. This filter essentially treats vtkTables as 2D matrices and reshapes them using numpy.reshape in a C contiguous manner. Unfortunately, data fields will be renamed arbitrarily because VTK data arrays require a name.">
      </Documentation>
      <Hints>
        <ShowInMenu category="PVGeo General Filters" />
      </Hints>

      <!-- Built on version: 0.7.4 -->
      <StringVectorProperty
        panel_visibility="never"
        name="BUILDVERSION"
        label="BUILDVERSION"
        initial_string="BUILDVERSION"
        command="SetParameter"
        animateable="1"
        default_values="0.7.4"
        number_of_elements="1">
        <Documentation>This is an attribute to the filter to know what version it was built on. This is necessary for plugins that have major changes across versions and might need to alert a user that their state file is out of date.</Documentation>
      </StringVectorProperty>

      <!-- Output data type: "vtkTable" -->
      <IntVectorProperty command="SetOutputDataSetType"
        default_values="19"
        name="OutputDataSetType"
        number_of_elements="1"
        panel_visibility="never">
        <Documentation>The value of this property determines the dataset type
        for the output of the programmable filter.</Documentation>
      </IntVectorProperty>

<IntVectorProperty
    name="Order"
    command="SetParameter"
    number_of_elements="1"
    initial_string="test_drop_down_menu"
    default_values="0">
    <EnumerationDomain name="enum">
            <Entry value="0" text="Fortran-style: column-major order"/>
            <Entry value="1" text="C-style: Row-major order"/>
    </EnumerationDomain>
    <Documentation>
        This is the type of memory ordering to use.
    </Documentation>
</IntVectorProperty>


      <InputProperty
        name="Input"
        command="SetInputConnection">
          <ProxyGroupDomain name="groups">
            <Group name="sources"/>
            <Group name="filters"/>
          </ProxyGroupDomain>

          <DataTypeDomain name="input_type">
            <DataType value="vtkTable"/>
          </DataTypeDomain>
      </InputProperty>



      <StringVectorProperty
        panel_visibility="default"
        name="Array_Names"
        label="Array Names"
        initial_string="Array_Names"
        command="SetParameter"
        animateable="1"
        default_values=""
        number_of_elements="1">
        <Documentation>A semicolon (;) seperated list of names for the arrays</Documentation>
      </StringVectorProperty>

      <IntVectorProperty
        panel_visibility="default"
        name="Order"
        label="Order"
        initial_string="Order"
        command="SetParameter"
        animateable="1"
        default_values="0"
        number_of_elements="1">
        <Documentation></Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        panel_visibility="default"
        name="ncols"
        label="ncols"
        initial_string="ncols"
        command="SetParameter"
        animateable="1"
        default_values="6"
        number_of_elements="1">
        <Documentation></Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        panel_visibility="default"
        name="nrows"
        label="nrows"
        initial_string="nrows"
        command="SetParameter"
        animateable="1"
        default_values="126"
        number_of_elements="1">
        <Documentation></Documentation>
      </IntVectorProperty>

      <StringVectorProperty
        name="Script"
        command="SetScript"
        number_of_elements="1"
        default_values="from PVGeo.filters_general import reshapeTable&#xA;&#xA;pdi = self.GetInput() #vtkTable&#xA;pdo = self.GetOutput() #vtkTable&#xA;&#xA;mem = 'C'&#xA;if Order == 0:&#xA;    mem = 'F'&#xA;&#xA;reshapeTable(pdi, nrows, ncols, names=Array_Names, order=mem, pdo=pdo)&#xA;"
        panel_visibility="advanced">
        <Hints>
          <Widget type="multi_line" syntax="python"/>
        </Hints>
        <Documentation>This property contains the text of a python program that
        the programmable source runs.</Documentation>
        </StringVectorProperty>



      <StringVectorProperty
        command="SetPythonPath"
        name="PythonPath"
        number_of_elements="1"
        panel_visibility="advanced">
        <Documentation>A semi-colon (;) separated list of directories to add to
        the python library search path.</Documentation>
      </StringVectorProperty>
    </SourceProxy>

    <!-- ./filters-general//filter_points_to_voxels.py -->
    <SourceProxy
      name="VoxelizePointsSpacing"
      class="vtkPythonProgrammableFilter"
      label="Voxelize Points with Spacing Arrays">
      <Documentation
        long_help="This makes a vtkUnstructuredGrid of scattered points given voxel sizes as input arrays"
        short_help="This makes a vtkUnstructuredGrid of scattered points given voxel sizes as input arrays">
      </Documentation>
      <Hints>
        <ShowInMenu category="PVGeo General Filters" />
      </Hints>

      <!-- Built on version: 0.7.4 -->
      <StringVectorProperty
        panel_visibility="never"
        name="BUILDVERSION"
        label="BUILDVERSION"
        initial_string="BUILDVERSION"
        command="SetParameter"
        animateable="1"
        default_values="0.7.4"
        number_of_elements="1">
        <Documentation>This is an attribute to the filter to know what version it was built on. This is necessary for plugins that have major changes across versions and might need to alert a user that their state file is out of date.</Documentation>
      </StringVectorProperty>

      <!-- Output data type: "vtkUnstructuredGrid" -->
      <IntVectorProperty command="SetOutputDataSetType"
        default_values="4"
        name="OutputDataSetType"
        number_of_elements="1"
        panel_visibility="never">
        <Documentation>The value of this property determines the dataset type
        for the output of the programmable filter.</Documentation>
      </IntVectorProperty>


      <InputProperty
        name="Input"
        command="SetInputConnection">
          <ProxyGroupDomain name="groups">
            <Group name="sources"/>
            <Group name="filters"/>
          </ProxyGroupDomain>

          <DataTypeDomain name="input_type">
            <DataType value="vtkPolyData"/>
          </DataTypeDomain>
      </InputProperty>

      <StringVectorProperty
        name="SelectInputScalars0"
        label="dx"
        command="SetInputArrayToProcess"
        default_values="0 NULL"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        animateable="0">
        <ArrayListDomain
          name="array_list"
          attribute_type="Scalars"
          input_domain_name="inputs_array">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain
          name="field_list">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>
      <StringVectorProperty
        name="SelectInputScalars1"
        label="dy"
        command="SetInputArrayToProcess"
        default_values="1 NULL"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        animateable="0">
        <ArrayListDomain
          name="array_list"
          attribute_type="Scalars"
          input_domain_name="inputs_array">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain
          name="field_list">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>
      <StringVectorProperty
        name="SelectInputScalars2"
        label="dz"
        command="SetInputArrayToProcess"
        default_values="2 NULL"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        animateable="0">
        <ArrayListDomain
          name="array_list"
          attribute_type="Scalars"
          input_domain_name="inputs_array">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain
          name="field_list">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>



      <StringVectorProperty
        name="Script"
        command="SetScript"
        number_of_elements="1"
        default_values="from vtk.util import numpy_support as nps&#xA;from vtk.numpy_interface import dataset_adapter as dsa&#xA;import PVGeo._helpers as inputhelp&#xA;from PVGeo.filters_general import voxelizePoints, addCellData&#xA;pdi = self.GetInput() # poly data with points&#xA;pdo = self.GetOutput() # vtkUnstructuredGrid&#xA;wpdi = dsa.WrapDataObject(pdi)&#xA;&#xA;pts = wpdi.Points&#xA;x,y,z = pts[:,0], pts[:,1], pts[:,2]&#xA;# Get input array info (selection made in drop down menu)&#xA;dx = inputhelp.getSelectedArray(self, wpdi, 0)&#xA;dy = inputhelp.getSelectedArray(self, wpdi, 1)&#xA;dz = inputhelp.getSelectedArray(self, wpdi, 2)&#xA;names = [&#xA;    inputhelp.getSelectedArrayName(self, 0),&#xA;    inputhelp.getSelectedArrayName(self, 1),&#xA;    inputhelp.getSelectedArrayName(self, 2)&#xA;]&#xA;&#xA;&#xA;voxelizePoints(x,y,z,dx,dy,dz, grid=pdo, estimate_grid=False)&#xA;for i in range(pdi.GetPointData().GetNumberOfArrays()):&#xA;    arr = pdi.GetPointData().GetArray(i)&#xA;    if arr.GetName() in names:&#xA;        continue&#xA;    inputhelp.addArray(pdo, 1, arr) # adds to CELL data&#xA;"
        panel_visibility="advanced">
        <Hints>
          <Widget type="multi_line" syntax="python"/>
        </Hints>
        <Documentation>This property contains the text of a python program that
        the programmable source runs.</Documentation>
        </StringVectorProperty>



      <StringVectorProperty
        command="SetPythonPath"
        name="PythonPath"
        number_of_elements="1"
        panel_visibility="advanced">
        <Documentation>A semi-colon (;) separated list of directories to add to
        the python library search path.</Documentation>
      </StringVectorProperty>
    </SourceProxy>

    <!-- ./filters-general//filter_points_to_tube.py -->
    <SourceProxy
      name="PointsToTube"
      class="vtkPythonProgrammableFilter"
      label="Points To Tube">
      <Documentation
        long_help="Takes points from a vtkPolyData object and constructs a line of those points then builds a polygonal tube around that line with some specified radius and number of sides."
        short_help="Takes points from a vtkPolyData object and constructs a line of those points then builds a polygonal tube around that line with some specified radius and number of sides.">
      </Documentation>
      <Hints>
        <ShowInMenu category="PVGeo General Filters" />
      </Hints>

      <!-- Built on version: 0.7.4 -->
      <StringVectorProperty
        panel_visibility="never"
        name="BUILDVERSION"
        label="BUILDVERSION"
        initial_string="BUILDVERSION"
        command="SetParameter"
        animateable="1"
        default_values="0.7.4"
        number_of_elements="1">
        <Documentation>This is an attribute to the filter to know what version it was built on. This is necessary for plugins that have major changes across versions and might need to alert a user that their state file is out of date.</Documentation>
      </StringVectorProperty>

      <!-- Output data type: "vtkPolyData" -->
      <IntVectorProperty command="SetOutputDataSetType"
        default_values="0"
        name="OutputDataSetType"
        number_of_elements="1"
        panel_visibility="never">
        <Documentation>The value of this property determines the dataset type
        for the output of the programmable filter.</Documentation>
      </IntVectorProperty>


      <InputProperty
        name="Input"
        command="SetInputConnection">
          <ProxyGroupDomain name="groups">
            <Group name="sources"/>
            <Group name="filters"/>
          </ProxyGroupDomain>

          <DataTypeDomain name="input_type">
            <DataType value="vtkPolyData"/>
          </DataTypeDomain>
      </InputProperty>



      <IntVectorProperty
        panel_visibility="default"
        name="Number_of_Sides"
        label="Number of Sides"
        initial_string="Number_of_Sides"
        command="SetParameter"
        animateable="1"
        default_values="20"
        number_of_elements="1">
        <Documentation></Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty
        panel_visibility="default"
        name="Radius"
        label="Radius"
        initial_string="Radius"
        command="SetParameter"
        animateable="1"
        default_values="10.0"
        number_of_elements="1">
        <Documentation></Documentation>
      </DoubleVectorProperty>

      <IntVectorProperty
        panel_visibility="default"
        name="Use_nearest_nbr"
        label="Use nearest nbr"
        initial_string="Use_nearest_nbr"
        command="SetParameter"
        animateable="1"
        default_values="1"
        number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation></Documentation>
      </IntVectorProperty>

      <StringVectorProperty
        name="Script"
        command="SetScript"
        number_of_elements="1"
        default_values="from PVGeo.filters_general import pointsToTube&#xA;pdi = self.GetInput() # VTK PolyData Type&#xA;pdo = self.GetOutput() # VTK PolyData Type&#xA;&#xA;pointsToTube(pdi, radius=Radius, numSides=Number_of_Sides, nrNbr=Use_nearest_nbr, pdo=pdo)&#xA;"
        panel_visibility="advanced">
        <Hints>
          <Widget type="multi_line" syntax="python"/>
        </Hints>
        <Documentation>This property contains the text of a python program that
        the programmable source runs.</Documentation>
        </StringVectorProperty>



      <StringVectorProperty
        command="SetPythonPath"
        name="PythonPath"
        number_of_elements="1"
        panel_visibility="advanced">
        <Documentation>A semi-colon (;) separated list of directories to add to
        the python library search path.</Documentation>
      </StringVectorProperty>
    </SourceProxy>

    <!-- ./filters-general//example_filter.py -->
    <SourceProxy
      name="ExamplePythonFilter"
      class="vtkPythonProgrammableFilter"
      label="Example Python Filter">
      <Documentation
        long_help="This is a simple example of a Python Programmable Filter"
        short_help="This is a simple example of a Python Programmable Filter">
      </Documentation>
      <Hints>
        <ShowInMenu category="PVGeo General Filters" />
      </Hints>

      <!-- Built on version: 0.7.4 -->
      <StringVectorProperty
        panel_visibility="never"
        name="BUILDVERSION"
        label="BUILDVERSION"
        initial_string="BUILDVERSION"
        command="SetParameter"
        animateable="1"
        default_values="0.7.4"
        number_of_elements="1">
        <Documentation>This is an attribute to the filter to know what version it was built on. This is necessary for plugins that have major changes across versions and might need to alert a user that their state file is out of date.</Documentation>
      </StringVectorProperty>

      <!-- Output data type: "vtkDataObject" -->
      <IntVectorProperty command="SetOutputDataSetType"
        default_values="7"
        name="OutputDataSetType"
        number_of_elements="1"
        panel_visibility="never">
        <Documentation>The value of this property determines the dataset type
        for the output of the programmable filter.</Documentation>
      </IntVectorProperty>


      <InputProperty
        name="Input"
        command="SetInputConnection">
          <ProxyGroupDomain name="groups">
            <Group name="sources"/>
            <Group name="filters"/>
          </ProxyGroupDomain>

          <DataTypeDomain name="input_type">
            <DataType value="vtkDataObject"/>
          </DataTypeDomain>
      </InputProperty>

      <StringVectorProperty
        name="SelectInputScalars0"
        label="Array Input 1"
        command="SetInputArrayToProcess"
        default_values="0 NULL"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        animateable="0">
        <ArrayListDomain
          name="array_list"
          attribute_type="Scalars"
          input_domain_name="inputs_array">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain
          name="field_list">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>
      <StringVectorProperty
        name="SelectInputScalars1"
        label="Array Input 2"
        command="SetInputArrayToProcess"
        default_values="1 NULL"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        animateable="0">
        <ArrayListDomain
          name="array_list"
          attribute_type="Scalars"
          input_domain_name="inputs_array">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain
          name="field_list">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>


      <IntVectorProperty
        panel_visibility="default"
        name="test_bool"
        label="test bool"
        initial_string="test_bool"
        command="SetParameter"
        animateable="1"
        default_values="1"
        number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>This is a description about the test_bool property!</Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty
        panel_visibility="default"
        name="test_double"
        label="test double"
        initial_string="test_double"
        command="SetParameter"
        animateable="1"
        default_values="1.23"
        number_of_elements="1">
        <Documentation></Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        panel_visibility="default"
        name="test_double_vector"
        label="test double vector"
        initial_string="test_double_vector"
        command="SetParameter"
        animateable="1"
        default_values="1.1 2.2 3.3"
        number_of_elements="3">
        <Documentation></Documentation>
      </DoubleVectorProperty>

      <IntVectorProperty
        panel_visibility="default"
        name="test_int"
        label="test int"
        initial_string="test_int"
        command="SetParameter"
        animateable="1"
        default_values="123"
        number_of_elements="1">
        <Documentation></Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        panel_visibility="default"
        name="test_int_vector"
        label="test int vector"
        initial_string="test_int_vector"
        command="SetParameter"
        animateable="1"
        default_values="1 2 3"
        number_of_elements="3">
        <Documentation></Documentation>
      </IntVectorProperty>

      <StringVectorProperty
        panel_visibility="default"
        name="test_string"
        label="test string"
        initial_string="test_string"
        command="SetParameter"
        animateable="1"
        default_values="string value"
        number_of_elements="1">
        <Documentation></Documentation>
      </StringVectorProperty>

      <StringVectorProperty
        name="Script"
        command="SetScript"
        number_of_elements="1"
        default_values="from vtk.util import numpy_support as nps&#xA;import PVGeo._helpers as inputhelp&#xA;pdi = self.GetInput() # VTK Data Type&#xA;pdo = self.GetOutput() # VTK Data Type&#xA;# Get input array info (selection made in drop down menu)&#xA;name = inputhelp.getSelectedArrayName(self, 0)&#xA;field = inputhelp.getSelectedArrayField(self, 0)&#xA;&#xA;if test_bool:&#xA;    print(name,field)&#xA;else:&#xA;    print(test_string)&#xA;"
        panel_visibility="advanced">
        <Hints>
          <Widget type="multi_line" syntax="python"/>
        </Hints>
        <Documentation>This property contains the text of a python program that
        the programmable source runs.</Documentation>
        </StringVectorProperty>

      <StringVectorProperty
        name="InformationScript"
        label="RequestInformation Script"
        command="SetInformationScript"
        number_of_elements="1"
        default_values="from paraview import util&#xA;# This script is usually not necessary for filters&#xA;# Here's an example of setting extents that might be necessary for plugin to function correctly:&#xA;#util.SetOutputWholeExtent(self, [0,nx-1, 0,ny-1, 0,nz-1])&#xA;print('Have a great day!')&#xA;"
        panel_visibility="advanced">
        <Hints>
          <Widget type="multi_line" syntax="python"/>
        </Hints>
        <Documentation>This property is a python script that is executed during
        the RequestInformation pipeline pass. Use this to provide information
        such as WHOLE_EXTENT to the pipeline downstream.</Documentation>
      </StringVectorProperty>


      <StringVectorProperty
        command="SetPythonPath"
        name="PythonPath"
        number_of_elements="1"
        panel_visibility="advanced">
        <Documentation>A semi-colon (;) separated list of directories to add to
        the python library search path.</Documentation>
      </StringVectorProperty>
    </SourceProxy>

    <!-- ./filters-general//filter_points_to_uniform_voxels.py -->
    <SourceProxy
      name="VoxelizePointsUniformly"
      class="vtkPythonProgrammableFilter"
      label="Voxelize Points Uniformly">
      <Documentation
        long_help="This makes a vtkUnstructuredGrid of scattered points by estimating a uniform voxel size. The user can also give the filter a voxel size to use."
        short_help="This makes a vtkUnstructuredGrid of scattered points by estimating a uniform voxel size. The user can also give the filter a voxel size to use.">
      </Documentation>
      <Hints>
        <ShowInMenu category="PVGeo General Filters" />
      </Hints>

      <!-- Built on version: 0.7.4 -->
      <StringVectorProperty
        panel_visibility="never"
        name="BUILDVERSION"
        label="BUILDVERSION"
        initial_string="BUILDVERSION"
        command="SetParameter"
        animateable="1"
        default_values="0.7.4"
        number_of_elements="1">
        <Documentation>This is an attribute to the filter to know what version it was built on. This is necessary for plugins that have major changes across versions and might need to alert a user that their state file is out of date.</Documentation>
      </StringVectorProperty>

      <!-- Output data type: "vtkUnstructuredGrid" -->
      <IntVectorProperty command="SetOutputDataSetType"
        default_values="4"
        name="OutputDataSetType"
        number_of_elements="1"
        panel_visibility="never">
        <Documentation>The value of this property determines the dataset type
        for the output of the programmable filter.</Documentation>
      </IntVectorProperty>


      <InputProperty
        name="Input"
        command="SetInputConnection">
          <ProxyGroupDomain name="groups">
            <Group name="sources"/>
            <Group name="filters"/>
          </ProxyGroupDomain>

          <DataTypeDomain name="input_type">
            <DataType value="vtkPolyData"/>
          </DataTypeDomain>
      </InputProperty>



      <IntVectorProperty
        panel_visibility="default"
        name="Estimate_Grid"
        label="Estimate Grid"
        initial_string="Estimate_Grid"
        command="SetParameter"
        animateable="1"
        default_values="1"
        number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation></Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty
        panel_visibility="default"
        name="dx"
        label="dx"
        initial_string="dx"
        command="SetParameter"
        animateable="1"
        default_values="10.0"
        number_of_elements="1">
        <Documentation></Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        panel_visibility="default"
        name="dy"
        label="dy"
        initial_string="dy"
        command="SetParameter"
        animateable="1"
        default_values="10.0"
        number_of_elements="1">
        <Documentation></Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        panel_visibility="default"
        name="dz"
        label="dz"
        initial_string="dz"
        command="SetParameter"
        animateable="1"
        default_values="10.0"
        number_of_elements="1">
        <Documentation></Documentation>
      </DoubleVectorProperty>

      <StringVectorProperty
        name="Script"
        command="SetScript"
        number_of_elements="1"
        default_values="from vtk.util import numpy_support as nps&#xA;from vtk.numpy_interface import dataset_adapter as dsa&#xA;import PVGeo._helpers as inputhelp&#xA;from PVGeo.filters_general import voxelizePoints, addCellData&#xA;pdi = self.GetInput() # poly data with points&#xA;pdo = self.GetOutput() # vtkUnstructuredGrid&#xA;wpdi = dsa.WrapDataObject(pdi)&#xA;&#xA;pts = wpdi.Points&#xA;x,y,z = pts[:,0], pts[:,1], pts[:,2]&#xA;voxelizePoints(x,y,z,dx,dy,dz, grid=pdo, estimate_grid=Estimate_Grid)&#xA;for i in range(pdi.GetPointData().GetNumberOfArrays()):&#xA;    arr = pdi.GetPointData().GetArray(i)&#xA;    inputhelp.addArray(pdo, 1, arr) # adds to CELL data&#xA;"
        panel_visibility="advanced">
        <Hints>
          <Widget type="multi_line" syntax="python"/>
        </Hints>
        <Documentation>This property contains the text of a python program that
        the programmable source runs.</Documentation>
        </StringVectorProperty>



      <StringVectorProperty
        command="SetPythonPath"
        name="PythonPath"
        number_of_elements="1"
        panel_visibility="advanced">
        <Documentation>A semi-colon (;) separated list of directories to add to
        the python library search path.</Documentation>
      </StringVectorProperty>
    </SourceProxy>

    <!-- ./filters-general//filter_add_cell_connectivity_to_points.py -->
    <SourceProxy
      name="AddCellConnectivityToPoints"
      class="vtkPythonProgrammableFilter"
      label="Add Cell Connectivity To Points">
      <Documentation
        long_help="This filter will add linear cell connectivity between scattered points. You have the option to add VTK_Line or VTK_PolyLine connectivity. VTK_Line connectivity makes a straight line between the points in order (either in the order by index or using a nearest neighbor calculation). The VTK_PolyLine adds a poly line connectivity between all points as one spline (either in the order by index or using a nearest neighbor calculation)."
        short_help="This filter will add linear cell connectivity between scattered points. You have the option to add VTK_Line or VTK_PolyLine connectivity. VTK_Line connectivity makes a straight line between the points in order (either in the order by index or using a nearest neighbor calculation). The VTK_PolyLine adds a poly line connectivity between all points as one spline (either in the order by index or using a nearest neighbor calculation).">
      </Documentation>
      <Hints>
        <ShowInMenu category="PVGeo General Filters" />
      </Hints>

      <!-- Built on version: 0.7.4 -->
      <StringVectorProperty
        panel_visibility="never"
        name="BUILDVERSION"
        label="BUILDVERSION"
        initial_string="BUILDVERSION"
        command="SetParameter"
        animateable="1"
        default_values="0.7.4"
        number_of_elements="1">
        <Documentation>This is an attribute to the filter to know what version it was built on. This is necessary for plugins that have major changes across versions and might need to alert a user that their state file is out of date.</Documentation>
      </StringVectorProperty>

      <!-- Output data type: "vtkPolyData" -->
      <IntVectorProperty command="SetOutputDataSetType"
        default_values="0"
        name="OutputDataSetType"
        number_of_elements="1"
        panel_visibility="never">
        <Documentation>The value of this property determines the dataset type
        for the output of the programmable filter.</Documentation>
      </IntVectorProperty>
<IntVectorProperty
    name="Cell_Type"
    command="SetParameter"
    number_of_elements="1"
    initial_string="test_drop_down_menu"
    default_values="0">
    <EnumerationDomain name="enum">
          <Entry value="4" text="Poly Line"/>
          <Entry value="3" text="Line"/>
    </EnumerationDomain>
    <Documentation>
        Choose what type of cell connectivity to have.
    </Documentation>
</IntVectorProperty>


      <InputProperty
        name="Input"
        command="SetInputConnection">
          <ProxyGroupDomain name="groups">
            <Group name="sources"/>
            <Group name="filters"/>
          </ProxyGroupDomain>

          <DataTypeDomain name="input_type">
            <DataType value="vtkPolyData"/>
          </DataTypeDomain>
      </InputProperty>



      <IntVectorProperty
        panel_visibility="default"
        name="Cell_Type"
        label="Cell Type"
        initial_string="Cell_Type"
        command="SetParameter"
        animateable="1"
        default_values="4"
        number_of_elements="1">
        <Documentation></Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        panel_visibility="default"
        name="Use_nearest_nbr"
        label="Use nearest nbr"
        initial_string="Use_nearest_nbr"
        command="SetParameter"
        animateable="1"
        default_values="1"
        number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Check this to use SciPy's cKDTree nearest neighbor algorithms to sort the points to before adding linear connectivity</Documentation>
      </IntVectorProperty>

      <StringVectorProperty
        name="Script"
        command="SetScript"
        number_of_elements="1"
        default_values="from PVGeo.filters_general import connectCells&#xA;# Get input/output of Proxy&#xA;pdi = self.GetInput() # VTK PolyData Type&#xA;pdo = self.GetOutput() # VTK PolyData Type&#xA;# Perfrom task&#xA;connectCells(pdi, cellType=Cell_Type, nrNbr=Use_nearest_nbr, pdo=pdo, logTime=False)&#xA;"
        panel_visibility="advanced">
        <Hints>
          <Widget type="multi_line" syntax="python"/>
        </Hints>
        <Documentation>This property contains the text of a python program that
        the programmable source runs.</Documentation>
        </StringVectorProperty>



      <StringVectorProperty
        command="SetPythonPath"
        name="PythonPath"
        number_of_elements="1"
        panel_visibility="advanced">
        <Documentation>A semi-colon (;) separated list of directories to add to
        the python library search path.</Documentation>
      </StringVectorProperty>
    </SourceProxy>

    <!-- ./filters-general//filter_correlate_arrays.py -->
    <SourceProxy
      name="CorrelateArrays"
      class="vtkPythonProgrammableFilter"
      label="Correlate Arrays">
      <Documentation
        long_help="Use `np.correlate()` on `mode='same'` on two selected arrays from one input."
        short_help="Use `np.correlate()` on `mode='same'` on two selected arrays from one input.">
      </Documentation>
      <Hints>
        <ShowInMenu category="PVGeo General Filters" />
      </Hints>

      <!-- Built on version: 0.7.4 -->
      <StringVectorProperty
        panel_visibility="never"
        name="BUILDVERSION"
        label="BUILDVERSION"
        initial_string="BUILDVERSION"
        command="SetParameter"
        animateable="1"
        default_values="0.7.4"
        number_of_elements="1">
        <Documentation>This is an attribute to the filter to know what version it was built on. This is necessary for plugins that have major changes across versions and might need to alert a user that their state file is out of date.</Documentation>
      </StringVectorProperty>

      <!-- Output data type: "Same as input" -->
      <IntVectorProperty command="SetOutputDataSetType"
        default_values="8"
        name="OutputDataSetType"
        number_of_elements="1"
        panel_visibility="never">
        <Documentation>The value of this property determines the dataset type
        for the output of the programmable filter.</Documentation>
      </IntVectorProperty>


      <InputProperty
        name="Input"
        command="SetInputConnection">
          <ProxyGroupDomain name="groups">
            <Group name="sources"/>
            <Group name="filters"/>
          </ProxyGroupDomain>

          <DataTypeDomain name="input_type">
            <DataType value="vtkDataObject"/>
          </DataTypeDomain>
      </InputProperty>

      <StringVectorProperty
        name="SelectInputScalars0"
        label="Array 1"
        command="SetInputArrayToProcess"
        default_values="0 NULL"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        animateable="0">
        <ArrayListDomain
          name="array_list"
          attribute_type="Scalars"
          input_domain_name="inputs_array">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain
          name="field_list">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>
      <StringVectorProperty
        name="SelectInputScalars1"
        label="Array 2"
        command="SetInputArrayToProcess"
        default_values="1 NULL"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        animateable="0">
        <ArrayListDomain
          name="array_list"
          attribute_type="Scalars"
          input_domain_name="inputs_array">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain
          name="field_list">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>


      <DoubleVectorProperty
        panel_visibility="default"
        name="Multiplier"
        label="Multiplier"
        initial_string="Multiplier"
        command="SetParameter"
        animateable="1"
        default_values="1.0"
        number_of_elements="1">
        <Documentation>This is a static shifter/scale factor across the array after normalization.</Documentation>
      </DoubleVectorProperty>

      <StringVectorProperty
        panel_visibility="default"
        name="New_Array_Name"
        label="New Array Name"
        initial_string="New_Array_Name"
        command="SetParameter"
        animateable="1"
        default_values="Correlated"
        number_of_elements="1">
        <Documentation>Give the new normalized array a meaningful name.</Documentation>
      </StringVectorProperty>

      <StringVectorProperty
        name="Script"
        command="SetScript"
        number_of_elements="1"
        default_values="from PVGeo.filters_general import correlateArrays&#xA;import PVGeo._helpers as inputhelp&#xA;# Get input/output of Proxy&#xA;pdi = self.GetInput()&#xA;pdo = self.GetOutput()&#xA;# Grab input arrays to process from drop down menus&#xA;# Simply grab the name and field association&#xA;name0 = inputhelp.getSelectedArrayName(self, 0)&#xA;field0 = inputhelp.getSelectedArrayField(self, 0)&#xA;name1 = inputhelp.getSelectedArrayName(self, 1)&#xA;field1 = inputhelp.getSelectedArrayField(self, 1)&#xA;# Pass array names and associations on to process&#xA;correlateArrays(pdi, (name0,field0), (name1,field1), multiplier=Multiplier, newName=New_Array_Name, pdo=pdo)&#xA;"
        panel_visibility="advanced">
        <Hints>
          <Widget type="multi_line" syntax="python"/>
        </Hints>
        <Documentation>This property contains the text of a python program that
        the programmable source runs.</Documentation>
        </StringVectorProperty>



      <StringVectorProperty
        command="SetPythonPath"
        name="PythonPath"
        number_of_elements="1"
        panel_visibility="advanced">
        <Documentation>A semi-colon (;) separated list of directories to add to
        the python library search path.</Documentation>
      </StringVectorProperty>
    </SourceProxy>

    <!-- ./filters-general//filter_lat_lon_to_cartesian.py -->
    <SourceProxy
      name="LatLonToCartesian"
      class="vtkPythonProgrammableFilter"
      label="Lat Lon To Cartesian">
      <Documentation
        long_help="A filter to convert a table with Latitude, Longitude, and Altitude information to XYZ points. ISSUE: Assumes spherical Earth."
        short_help="A filter to convert a table with Latitude, Longitude, and Altitude information to XYZ points. ISSUE: Assumes spherical Earth.">
      </Documentation>
      <Hints>
        <ShowInMenu category="PVGeo General Filters" />
      </Hints>

      <!-- Built on version: 0.7.4 -->
      <StringVectorProperty
        panel_visibility="never"
        name="BUILDVERSION"
        label="BUILDVERSION"
        initial_string="BUILDVERSION"
        command="SetParameter"
        animateable="1"
        default_values="0.7.4"
        number_of_elements="1">
        <Documentation>This is an attribute to the filter to know what version it was built on. This is necessary for plugins that have major changes across versions and might need to alert a user that their state file is out of date.</Documentation>
      </StringVectorProperty>

      <!-- Output data type: "vtkPolyData" -->
      <IntVectorProperty command="SetOutputDataSetType"
        default_values="0"
        name="OutputDataSetType"
        number_of_elements="1"
        panel_visibility="never">
        <Documentation>The value of this property determines the dataset type
        for the output of the programmable filter.</Documentation>
      </IntVectorProperty>


      <InputProperty
        name="Input"
        command="SetInputConnection">
          <ProxyGroupDomain name="groups">
            <Group name="sources"/>
            <Group name="filters"/>
          </ProxyGroupDomain>

          <DataTypeDomain name="input_type">
            <DataType value="vtkTable"/>
          </DataTypeDomain>
      </InputProperty>

      <StringVectorProperty
        name="SelectInputScalars0"
        label="Latitude"
        command="SetInputArrayToProcess"
        default_values="0 NULL"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        animateable="0">
        <ArrayListDomain
          name="array_list"
          attribute_type="Scalars"
          input_domain_name="inputs_array">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain
          name="field_list">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>
      <StringVectorProperty
        name="SelectInputScalars1"
        label="Longitude"
        command="SetInputArrayToProcess"
        default_values="1 NULL"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        animateable="0">
        <ArrayListDomain
          name="array_list"
          attribute_type="Scalars"
          input_domain_name="inputs_array">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain
          name="field_list">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>
      <StringVectorProperty
        name="SelectInputScalars2"
        label="Altitude"
        command="SetInputArrayToProcess"
        default_values="2 NULL"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        animateable="0">
        <ArrayListDomain
          name="array_list"
          attribute_type="Scalars"
          input_domain_name="inputs_array">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain
          name="field_list">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>


      <DoubleVectorProperty
        panel_visibility="default"
        name="Radius"
        label="Radius"
        initial_string="Radius"
        command="SetParameter"
        animateable="1"
        default_values="6371.0"
        number_of_elements="1">
        <Documentation></Documentation>
      </DoubleVectorProperty>

      <StringVectorProperty
        name="Script"
        command="SetScript"
        number_of_elements="1"
        default_values="from PVGeo.filters_general import latLonTableToCartesian&#xA;import PVGeo._helpers as inputhelp&#xA;# Get input/output of Proxy&#xA;pdi = self.GetInput()&#xA;pdo = self.GetOutput()&#xA;# Grab input arrays to process from drop down menus&#xA;# Simply grab the name and field association&#xA;namelat = inputhelp.getSelectedArrayName(self, 0)&#xA;fieldlat = inputhelp.getSelectedArrayField(self, 0)&#xA;namelon = inputhelp.getSelectedArrayName(self, 1)&#xA;fieldlon = inputhelp.getSelectedArrayField(self, 1)&#xA;namealt = inputhelp.getSelectedArrayName(self, 2)&#xA;fieldalt = inputhelp.getSelectedArrayField(self, 2)&#xA;# Pass on to do conversion&#xA;latLonTableToCartesian(pdi, (namelat, fieldlat), (namelon, fieldlon), (namealt, fieldalt), radius=Radius, pdo=pdo)&#xA;"
        panel_visibility="advanced">
        <Hints>
          <Widget type="multi_line" syntax="python"/>
        </Hints>
        <Documentation>This property contains the text of a python program that
        the programmable source runs.</Documentation>
        </StringVectorProperty>



      <StringVectorProperty
        command="SetPythonPath"
        name="PythonPath"
        number_of_elements="1"
        panel_visibility="advanced">
        <Documentation>A semi-colon (;) separated list of directories to add to
        the python library search path.</Documentation>
      </StringVectorProperty>
    </SourceProxy>

    <!-- ./filters-general//filter_normalize_array.py -->
    <SourceProxy
      name="NormalizeArray"
      class="vtkPythonProgrammableFilter"
      label="Normalize Array">
      <Documentation
        long_help="This filter allows the user to select an array from the input data set to be normalized. The filter will append another array to that data set for the output. The user can specify how they want to rename the array, can choose a multiplier, and can choose from several types of common normalizations (more functionality added as requested)."
        short_help="This filter allows the user to select an array from the input data set to be normalized. The filter will append another array to that data set for the output. The user can specify how they want to rename the array, can choose a multiplier, and can choose from several types of common normalizations (more functionality added as requested).">
      </Documentation>
      <Hints>
        <ShowInMenu category="PVGeo General Filters" />
      </Hints>

      <!-- Built on version: 0.7.4 -->
      <StringVectorProperty
        panel_visibility="never"
        name="BUILDVERSION"
        label="BUILDVERSION"
        initial_string="BUILDVERSION"
        command="SetParameter"
        animateable="1"
        default_values="0.7.4"
        number_of_elements="1">
        <Documentation>This is an attribute to the filter to know what version it was built on. This is necessary for plugins that have major changes across versions and might need to alert a user that their state file is out of date.</Documentation>
      </StringVectorProperty>

      <!-- Output data type: "Same as input" -->
      <IntVectorProperty command="SetOutputDataSetType"
        default_values="8"
        name="OutputDataSetType"
        number_of_elements="1"
        panel_visibility="never">
        <Documentation>The value of this property determines the dataset type
        for the output of the programmable filter.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty
        name="Normalization"
        command="SetParameter"
        number_of_elements="1"
        initial_string="test_drop_down_menu"
        default_values="0">
        <EnumerationDomain name="enum">
          <Entry value="0" text="Feature Scaling"/>
          <Entry value="1" text="Standard Score"/>
          <Entry value="2" text="Natural Log"/>
          <Entry value="3" text="Log Base 10"/>
          <Entry value="4" text="Just Multiply"/>
        </EnumerationDomain>
        <Documentation>
          This is the type of normalization to apply to the input array.
        </Documentation>
      </IntVectorProperty>


      <InputProperty
        name="Input"
        command="SetInputConnection">
          <ProxyGroupDomain name="groups">
            <Group name="sources"/>
            <Group name="filters"/>
          </ProxyGroupDomain>

          <DataTypeDomain name="input_type">
            <DataType value="vtkDataObject"/>
          </DataTypeDomain>
      </InputProperty>

      <StringVectorProperty
        name="SelectInputScalars0"
        label="Array"
        command="SetInputArrayToProcess"
        default_values="0 NULL"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        animateable="0">
        <ArrayListDomain
          name="array_list"
          attribute_type="Scalars"
          input_domain_name="inputs_array">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain
          name="field_list">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>


      <IntVectorProperty
        panel_visibility="default"
        name="Absolute_Value"
        label="Absolute Value"
        initial_string="Absolute_Value"
        command="SetParameter"
        animateable="1"
        default_values="0"
        number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>This will take the absolute value of the array before normalization.</Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty
        panel_visibility="default"
        name="Multiplier"
        label="Multiplier"
        initial_string="Multiplier"
        command="SetParameter"
        animateable="1"
        default_values="1.0"
        number_of_elements="1">
        <Documentation>This is a static shifter/scale factor across the array after normalization.</Documentation>
      </DoubleVectorProperty>

      <StringVectorProperty
        panel_visibility="default"
        name="New_Array_Name"
        label="New Array Name"
        initial_string="New_Array_Name"
        command="SetParameter"
        animateable="1"
        default_values="Normalized"
        number_of_elements="1">
        <Documentation>Give the new normalized array a meaningful name.</Documentation>
      </StringVectorProperty>

      <IntVectorProperty
        panel_visibility="default"
        name="Normalization"
        label="Normalization"
        initial_string="Normalization"
        command="SetParameter"
        animateable="1"
        default_values="0"
        number_of_elements="1">
        <Documentation></Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty
        panel_visibility="default"
        name="Range"
        label="Range"
        initial_string="Range"
        command="SetParameter"
        animateable="1"
        default_values="0.0 0.0"
        number_of_elements="2">
        <Documentation></Documentation>
      </DoubleVectorProperty>

      <IntVectorProperty
        panel_visibility="default"
        name="Use_Range"
        label="Use Range"
        initial_string="Use_Range"
        command="SetParameter"
        animateable="1"
        default_values="0"
        number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation></Documentation>
      </IntVectorProperty>

      <StringVectorProperty
        name="Script"
        command="SetScript"
        number_of_elements="1"
        default_values="from PVGeo.filters_general import normalizeArray&#xA;import PVGeo._helpers as inputhelp&#xA;# Choose range to use:&#xA;if Use_Range:&#xA;    rng = Range&#xA;else:&#xA;    rng = None&#xA;# Get input/output of Proxy&#xA;pdi = self.GetInput()&#xA;pdo = self.GetOutput()&#xA;# Grab input arrays to process from drop down menus&#xA;# Simply grab the name and field association&#xA;name = inputhelp.getSelectedArrayName(self, 0)&#xA;field = inputhelp.getSelectedArrayField(self, 0)&#xA;# Perfrom normalization&#xA;normalizeArray(pdi, (name,field), Normalization, multiplier=Multiplier, newName=New_Array_Name, pdo=pdo, abs=Absolute_Value, rng=rng)&#xA;"
        panel_visibility="advanced">
        <Hints>
          <Widget type="multi_line" syntax="python"/>
        </Hints>
        <Documentation>This property contains the text of a python program that
        the programmable source runs.</Documentation>
        </StringVectorProperty>



      <StringVectorProperty
        command="SetPythonPath"
        name="PythonPath"
        number_of_elements="1"
        panel_visibility="advanced">
        <Documentation>A semi-colon (;) separated list of directories to add to
        the python library search path.</Documentation>
      </StringVectorProperty>
    </SourceProxy>

    <!-- ./filters-general//example_filter_mult.py -->
    <SourceProxy
      name="ExampleFilterMultInput"
      class="vtkPythonProgrammableFilter"
      label="Example Filter Multiple Inputs"
      input_ports="2">
      <Documentation
        long_help="This is a simple example of a Python Programmable Filter with mutiple inputs."
        short_help="This is a simple example of a Python Programmable Filter with mutiple inputs.">
      </Documentation>
      <Hints>
        <ShowInMenu category="PVGeo General Filters" />
      </Hints>

      <!-- Built on version: 0.7.4 -->
      <StringVectorProperty
        panel_visibility="never"
        name="BUILDVERSION"
        label="BUILDVERSION"
        initial_string="BUILDVERSION"
        command="SetParameter"
        animateable="1"
        default_values="0.7.4"
        number_of_elements="1">
        <Documentation>This is an attribute to the filter to know what version it was built on. This is necessary for plugins that have major changes across versions and might need to alert a user that their state file is out of date.</Documentation>
      </StringVectorProperty>

      <!-- Output data type: "vtkPolyData" -->
      <IntVectorProperty command="SetOutputDataSetType"
        default_values="0"
        name="OutputDataSetType"
        number_of_elements="1"
        panel_visibility="never">
        <Documentation>The value of this property determines the dataset type
        for the output of the programmable filter.</Documentation>
      </IntVectorProperty>


      <InputProperty
        name="Input foo 1"
        command="SetInputConnection"
        port_index="0">
          <ProxyGroupDomain name="groups">
            <Group name="sources"/>
            <Group name="filters"/>
          </ProxyGroupDomain>

          <DataTypeDomain name="input_type">
            <DataType value="vtkDataObject"/>
          </DataTypeDomain>
      </InputProperty>

      <InputProperty
        name="Input foo 2"
        command="SetInputConnection"
        port_index="1">
          <ProxyGroupDomain name="groups">
            <Group name="sources"/>
            <Group name="filters"/>
          </ProxyGroupDomain>

          <DataTypeDomain name="input_type">
            <DataType value="vtkDataObject"/>
          </DataTypeDomain>
      </InputProperty>

      <StringVectorProperty
        name="SelectInputScalars0"
        label="Array Input 1"
        command="SetInputArrayToProcess"
        default_values="0 NULL"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        animateable="0">
        <ArrayListDomain
          name="array_list"
          attribute_type="Scalars"
          input_domain_name="inputs_array">
          <RequiredProperties>
            <Property
              name="Input foo 1"
              function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain
          name="field_list">
          <RequiredProperties>
            <Property
              name="Input foo 1"
              function="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>

      <StringVectorProperty
        name="SelectInputScalars1"
        label="Array Input 2"
        command="SetInputArrayToProcess"
        default_values="1 NULL"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        animateable="0">
        <ArrayListDomain
          name="array_list"
          attribute_type="Scalars"
          input_domain_name="inputs_array">
          <RequiredProperties>
            <Property
              name="Input foo 2"
              function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain
          name="field_list">
          <RequiredProperties>
            <Property
              name="Input foo 2"
              function="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>



      <StringVectorProperty
        name="Script"
        command="SetScript"
        number_of_elements="1"
        default_values="from vtk.util import numpy_support as nps&#xA;import PVGeo._helpers as inputhelp&#xA;pdo = self.GetOutput() # VTK Data Type&#xA;# Inputs from different ports:&#xA;pdi0 = self.GetInputDataObject(0, 0) # PORT 0&#xA;pdi1 = self.GetInputDataObject(1, 0) # PORT 1&#xA;&#xA;# DO STUFF WITH INOUTS AND OUTPUTS&#xA;print(type(pdi0))&#xA;print(type(pdi1))&#xA;&#xA;name0 = inputhelp.getSelectedArrayName(self, 0)&#xA;name1 = inputhelp.getSelectedArrayName(self, 1)&#xA;&#xA;print(name0,name1)&#xA;"
        panel_visibility="advanced">
        <Hints>
          <Widget type="multi_line" syntax="python"/>
        </Hints>
        <Documentation>This property contains the text of a python program that
        the programmable source runs.</Documentation>
        </StringVectorProperty>



      <StringVectorProperty
        command="SetPythonPath"
        name="PythonPath"
        number_of_elements="1"
        panel_visibility="advanced">
        <Documentation>A semi-colon (;) separated list of directories to add to
        the python library search path.</Documentation>
      </StringVectorProperty>
    </SourceProxy>
  </ProxyGroup>
</ServerManagerConfiguration>