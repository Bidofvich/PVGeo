<ServerManagerConfiguration>
  <ProxyGroup name="filters">
    <SourceProxy name="AddCellConnectivityToPoints" class="vtkPythonProgrammableFilter" label="Add Cell Connectivity To Points">
      <Documentation
        long_help="This filter will add linear cell connectivity between scattered points. You have the option to add VTK_Line or VTK_PolyLine connectivity. VTK_Line connectivity makes a straight line between the points in order (either in the order by index or using a nearest neighbor calculation). The VTK_PolyLine adds a poly line connectivity between all points as one spline (either in the order by index or using a nearest neighbor calculation)."
        short_help="This filter will add linear cell connectivity between scattered points. You have the option to add VTK_Line or VTK_PolyLine connectivity. VTK_Line connectivity makes a straight line between the points in order (either in the order by index or using a nearest neighbor calculation). The VTK_PolyLine adds a poly line connectivity between all points as one spline (either in the order by index or using a nearest neighbor calculation).">
      </Documentation>
      <Hints>
        <ShowInMenu category="CSM GP Filters" />
      </Hints>

      <!-- Output data type: "vtkPolyData" -->
      <IntVectorProperty command="SetOutputDataSetType"
                         default_values="0"
                         name="OutputDataSetType"
                         number_of_elements="1"
                         panel_visibility="never">
        <Documentation>The value of this property determines the dataset type
        for the output of the programmable filter.</Documentation>
      </IntVectorProperty>
<IntVectorProperty
    name="Cell_Type"
    command="SetParameter"
    number_of_elements="1"
    initial_string="test_drop_down_menu"
    default_values="0">
    <EnumerationDomain name="enum">
          <Entry value="4" text="Poly Line"/>
          <Entry value="3" text="Line"/>
    </EnumerationDomain>
    <Documentation>
        Choose what type of cell connectivity to have.
    </Documentation>
</IntVectorProperty>


      <InputProperty
        name="Input"
        command="SetInputConnection">
          <ProxyGroupDomain name="groups">
            <Group name="sources"/>
            <Group name="filters"/>
          </ProxyGroupDomain>

          <DataTypeDomain name="input_type">
            <DataType value="vtkPolyData"/>
          </DataTypeDomain>
      </InputProperty>



      <IntVectorProperty
        panel_visibility="default"
        name="Cell_Type"
        label="Cell Type"
        initial_string="Cell_Type"
        command="SetParameter"
        animateable="1"
        default_values="4"
        number_of_elements="1">
        <Documentation></Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        panel_visibility="default"
        name="Use_nearest_nbr"
        label="Use nearest nbr"
        initial_string="Use_nearest_nbr"
        command="SetParameter"
        animateable="1"
        default_values="1"
        number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Check this to use SciPy's cKDTree nearest neighbor algorithms to sort the points to before adding linear connectivity</Documentation>
      </IntVectorProperty>

      <StringVectorProperty
        name="Script"
        command="SetScript"
        number_of_elements="1"
        default_values="from PVGPpy.filt import connectCells&#xA;# Get input/output of Proxy&#xA;pdi = self.GetInput() # VTK PolyData Type&#xA;pdo = self.GetOutput() # VTK PolyData Type&#xA;# Perfrom task&#xA;connectCells(pdi, cellType=Cell_Type, nrNbr=Use_nearest_nbr, pdo=pdo, logTime=False)&#xA;"
        panel_visibility="advanced">
        <Hints>
          <Widget type="multi_line" syntax="python"/>
        </Hints>
        <Documentation>This property contains the text of a python program that
        the programmable source runs.</Documentation>
        </StringVectorProperty>


    </SourceProxy>
 </ProxyGroup>
</ServerManagerConfiguration>
