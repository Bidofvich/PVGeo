<ServerManagerConfiguration>
  <ProxyGroup name="sources">
    <SourceProxy name="ReadOcTreeMesh" class="vtkPythonProgrammableFilter" label="Read OcTree Mesh">
      <Documentation
        long_help="TODO"
        short_help="TODO">
      </Documentation>
      <Hints>
        <ShowInMenu category="PVGP Readers" />
      </Hints>
      <Hints>
        <ReaderFactory extensions="msh"
          file_description="PVGP: UBC OcTree Mesh File Format." />
      </Hints>

      <!-- Output data type: "vtkUnstructuredGrid" -->
      <IntVectorProperty command="SetOutputDataSetType"
                         default_values="4"
                         name="OutputDataSetType"
                         number_of_elements="1"
                         panel_visibility="never">
        <Documentation>The value of this property determines the dataset type
        for the output of the programmable filter.</Documentation>
      </IntVectorProperty>




      <StringVectorProperty
        name="FileNames"
        initial_string="FileNames"
        animateable="0"
        number_of_elements="0"
        command="AddParameter"
        clean_command="ClearParameter"
        repeat_command="1"
        panel_visibility="advanced">
        <FileListDomain name="files"/>
            <Documentation>
            The list of files to be read by the reader.
            </Documentation>
      </StringVectorProperty>

      <DoubleVectorProperty
        name="TimestepValues"
        repeatable="1"
        information_only="1">
        <TimeStepsInformationHelper/>
            <Documentation>
            Available timestep values.
            </Documentation>
        </DoubleVectorProperty>
        <Hints>
            <ReaderFactory extensions="msh"
                    file_description="PVGP: UBC OcTree Mesh File Format." />
        </Hints>


      <StringVectorProperty
        panel_visibility="default"
        name="Data_Name"
        label="Data Name"
        initial_string="Data_Name"
        command="SetParameter"
        animateable="1"
        default_values=""
        number_of_elements="1">
        <Documentation></Documentation>
      </StringVectorProperty>

      <StringVectorProperty
        panel_visibility="default"
        name="Delimiter_Field"
        label="Delimiter Field"
        initial_string="Delimiter_Field"
        command="SetParameter"
        animateable="1"
        default_values=" "
        number_of_elements="1">
        <Documentation></Documentation>
      </StringVectorProperty>

      <DoubleVectorProperty
        panel_visibility="advanced"
        name="Time_Step"
        label="Time Step"
        initial_string="Time_Step"
        command="SetParameter"
        animateable="1"
        default_values="1.0"
        number_of_elements="1">
        <Documentation></Documentation>
      </DoubleVectorProperty>

      <IntVectorProperty
        panel_visibility="default"
        name="Use_Tab_Delimiter"
        label="Use Tab Delimiter"
        initial_string="Use_Tab_Delimiter"
        command="SetParameter"
        animateable="1"
        default_values="0"
        number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation></Documentation>
      </IntVectorProperty>

      <StringVectorProperty
        name="Script"
        command="SetScript"
        number_of_elements="1"
        default_values="from PVGPpy.read import getTimeStepFileIndex&#xA;from PVGPpy.read import ubcOcTree&#xA;import os&#xA;# This finds the index for the FileNames for the requested timestep&#xA;i = getTimeStepFileIndex(self, FileNames, dt=Time_Step)&#xA;&#xA;# Get output&#xA;pdo = self.GetOutput()&#xA;# If no name given for data by user, use the basename of the file&#xA;if Data_Name == '':&#xA;    Data_Name = os.path.basename(FileNames[0]) # use first file in series so representation/cmap does not change.&#xA;# Read the UBC OcTree gridded data:&#xA;ubcOcTree(FileNames[i], deli=Delimiter_Field, useTab=Use_Tab_Delimiter, dataNm=Data_Name, pdo=pdo)&#xA;"
        panel_visibility="advanced">
        <Hints>
          <Widget type="multi_line" syntax="python"/>
        </Hints>
        <Documentation>This property contains the text of a python program that
        the programmable source runs.</Documentation>
        </StringVectorProperty>

      <StringVectorProperty
        name="InformationScript"
        label="RequestInformation Script"
        command="SetInformationScript"
        number_of_elements="1"
        default_values="from paraview import util&#xA;from PVGPpy.read import setOutputTimesteps, getTimeStepFileIndex&#xA;from PVGPpy.read import ubcExtnet&#xA;# This is necessary to set time steps&#xA;setOutputTimesteps(self, FileNames, dt=Time_Step)&#xA;i = getTimeStepFileIndex(self, FileNames, dt=Time_Step)&#xA;# Preview the mesh file and get the mesh extents&#xA;ext = ubcExtnet(FileNames[i])&#xA;# Set the mesh extents&#xA;print(ext)&#xA;util.SetOutputWholeExtent(self, ext)&#xA;"
        panel_visibility="advanced">
        <Hints>
          <Widget type="multi_line" syntax="python"/>
        </Hints>
        <Documentation>This property is a python script that is executed during
        the RequestInformation pipeline pass. Use this to provide information
        such as WHOLE_EXTENT to the pipeline downstream.</Documentation>
      </StringVectorProperty>


      <StringVectorProperty command="SetPythonPath"
                            name="PythonPath"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <Documentation>A semi-colon (;) separated list of directories to add to
        the python library search path.</Documentation>
      </StringVectorProperty>
    </SourceProxy>
 </ProxyGroup>
</ServerManagerConfiguration>
