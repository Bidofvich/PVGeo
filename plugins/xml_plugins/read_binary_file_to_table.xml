<ServerManagerConfiguration>
  <ProxyGroup name="sources">
    <SourceProxy name="ReadPackedBinaryFileToTable" class="vtkPythonProgrammableFilter" label="Read Packed Binary File To Table">
      <Documentation
        long_help="This filter reads in float data that is packed into a binary file fomrat. It will treat the data as one long array and make a vtkTable with one column of that data. The reader uses big endian. Use the Table to ImageData filter to reshape the data."
        short_help="This filter reads in float data that is packed into a binary file fomrat. It will treat the data as one long array and make a vtkTable with one column of that data. The reader uses big endian. Use the Table to ImageData filter to reshape the data.">
      </Documentation>
<Hints>
    <ShowInMenu category="CSM GP Readers" />
    <ReaderFactory extensions="H@ bin"
                   file_description="Binary Packed Floats or Doubles" />
</Hints>


          <StringVectorProperty
            panel_visibility="advanced"
            name="FileName"
            label="FileName"
            initial_string="FileName"
            command="SetParameter"
            animateable="1"
            default_values="absolute path"
            number_of_elements="1">
            <FileListDomain name="files"/>
            <Documentation></Documentation>
          </StringVectorProperty>


            <StringVectorProperty
            name="data_name"
            label="data name"
            initial_string="data_name"
            command="SetParameter"
            animateable="1"
            default_values=""
            number_of_elements="1">
            <Documentation></Documentation>
            </StringVectorProperty>


      <IntVectorProperty
        name="double_values"
        label="double values"
        initial_string="double_values"
        command="SetParameter"
        animateable="1"
        default_values="0"
        number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation></Documentation>
      </IntVectorProperty>

      <!-- Output data type: "vtkTable" -->
      <IntVectorProperty command="SetOutputDataSetType"
                         default_values="19"
                         name="OutputDataSetType"
                         number_of_elements="1"
                         panel_visibility="never">
        <Documentation>The value of this property determines the dataset type
        for the output of the programmable filter.</Documentation>
      </IntVectorProperty>

      <StringVectorProperty
        name="Script"
        command="SetScript"
        number_of_elements="1"
        default_values="import struct&#xA;import os&#xA;from vtk.util import numpy_support as nps&#xA;&#xA;pdo = self.GetOutput() # vtkTable&#xA;&#xA;num_bytes = 4 # FLOAT&#xA;if double_values:&#xA;    num_bytes = 8 # DOUBLE&#xA;&#xA;tn = os.stat(FileName).st_size / num_bytes&#xA;tn_string = str(tn)&#xA;raw = []&#xA;with open(FileName, 'rb') as file:&#xA;    # Unpack by num_bytes&#xA;    raw = struct.unpack('&gt;'+tn_string+'f', file.read(num_bytes*tn))&#xA;&#xA;# Put raw data into vtk array&#xA;data = nps.numpy_to_vtk(num_array=raw, deep=True, array_type=vtk.VTK_FLOAT)&#xA;&#xA;# If no name given for data by user, use the basename of the file&#xA;if data_name == '':&#xA;    data_name = os.path.basename(FileName)&#xA;data.SetName(data_name)&#xA;&#xA;# Table with single column of data only&#xA;pdo.AddColumn(data)&#xA;"
        panel_visibility="advanced">
        <Hints>
         <Widget type="multi_line"/>
       </Hints>
      <Documentation>This property contains the text of a python program that
      the programmable source runs.</Documentation>
      </StringVectorProperty>


    </SourceProxy>
 </ProxyGroup>
</ServerManagerConfiguration>
