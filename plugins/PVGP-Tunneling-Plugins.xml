<ServerManagerConfiguration>
  <!-- CATEGORY FILTERS -->
  <ProxyGroup name="filters">


    <!-- ./tunneling//filter_animate_tbm_partial.py -->
    <SourceProxy name="AnimatePartialTBM" class="vtkPythonProgrammableFilter" label="Animate Partial Tunnel Boring Machine">
      <Documentation
        long_help="This filter analyzes a vtkTable containing position information about a Tunnel Boring Machine (TBM). This Filter iterates over each row of the table as a timestep and uses the XYZ coordinates of a single parts of the TBM to generate a tube that represents taht part of the TBM. To create a directional vector for the length of the cylider that represents the TBM component, this filter searches for the next different point and gets a unit vector bewtween the two. Then two points are constructed in the positive and negative directions of that vector for the ends of the cylinder. This only uses rows that have a Status of 2."
        short_help="This filter analyzes a vtkTable containing position information about a Tunnel Boring Machine (TBM). This Filter iterates over each row of the table as a timestep and uses the XYZ coordinates of a single parts of the TBM to generate a tube that represents taht part of the TBM. To create a directional vector for the length of the cylider that represents the TBM component, this filter searches for the next different point and gets a unit vector bewtween the two. Then two points are constructed in the positive and negative directions of that vector for the ends of the cylinder. This only uses rows that have a Status of 2.">
      </Documentation>
      <Hints>
        <ShowInMenu category="PVGP Tunneling" />
      </Hints>

      <!-- Built on version: 0.6.2 -->
      <StringVectorProperty
        panel_visibility="never"
        name="BUILDVERSION"
        label="BUILDVERSION"
        initial_string="BUILDVERSION"
        command="SetParameter"
        animateable="1"
        default_values="0.6.2"
        number_of_elements="1">
        <Documentation>This is an attribute to the filter to know what version it was built on. This is necessary for plugins that have major changes across versions and might need to alert a user that their state file is out of date.</Documentation>
      </StringVectorProperty>

      <!-- Output data type: "vtkPolyData" -->
      <IntVectorProperty command="SetOutputDataSetType"
                         default_values="0"
                         name="OutputDataSetType"
                         number_of_elements="1"
                         panel_visibility="never">
        <Documentation>The value of this property determines the dataset type
        for the output of the programmable filter.</Documentation>
      </IntVectorProperty>
    <DoubleVectorProperty
      name="TimestepValues"
      repeatable="1"
      information_only="1">
      <TimeStepsInformationHelper/>
          <Documentation>
          Available timestep values.
          </Documentation>
    </DoubleVectorProperty>


      <InputProperty
        name="Input"
        command="SetInputConnection">
          <ProxyGroupDomain name="groups">
            <Group name="sources"/>
            <Group name="filters"/>
          </ProxyGroupDomain>

          <DataTypeDomain name="input_type">
            <DataType value="vtkTable"/>
          </DataTypeDomain>
      </InputProperty>

      <StringVectorProperty
        name="SelectInputScalars0"
        label="Easting"
        command="SetInputArrayToProcess"
        default_values="0 NULL"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        animateable="0">
        <ArrayListDomain
          name="array_list"
          attribute_type="Scalars"
          input_domain_name="inputs_array">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain
          name="field_list">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>


      <StringVectorProperty
        name="SelectInputScalars1"
        label="Northing"
        command="SetInputArrayToProcess"
        default_values="1 NULL"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        animateable="0">
        <ArrayListDomain
          name="array_list"
          attribute_type="Scalars"
          input_domain_name="inputs_array">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain
          name="field_list">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>


      <StringVectorProperty
        name="SelectInputScalars2"
        label="Elevation"
        command="SetInputArrayToProcess"
        default_values="2 NULL"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        animateable="0">
        <ArrayListDomain
          name="array_list"
          attribute_type="Scalars"
          input_domain_name="inputs_array">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain
          name="field_list">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>


      <StringVectorProperty
        name="SelectInputScalars3"
        label="Status"
        command="SetInputArrayToProcess"
        default_values="3 NULL"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        animateable="0">
        <ArrayListDomain
          name="array_list"
          attribute_type="Scalars"
          input_domain_name="inputs_array">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain
          name="field_list">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>




      <DoubleVectorProperty
        panel_visibility="default"
        name="Diameter"
        label="Diameter"
        initial_string="Diameter"
        command="SetParameter"
        animateable="1"
        default_values="17.45"
        number_of_elements="1">
        <Documentation></Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        panel_visibility="default"
        name="Length"
        label="Length"
        initial_string="Length"
        command="SetParameter"
        animateable="1"
        default_values="1.66"
        number_of_elements="1">
        <Documentation></Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        panel_visibility="default"
        name="dt"
        label="dt"
        initial_string="dt"
        command="SetParameter"
        animateable="1"
        default_values="1.0"
        number_of_elements="1">
        <Documentation></Documentation>
      </DoubleVectorProperty>

      <StringVectorProperty
        name="Script"
        command="SetScript"
        number_of_elements="1"
        default_values="import numpy as np&#xA;from vtk.numpy_interface import dataset_adapter as dsa&#xA;import PVGPpy.helpers as inputhelp&#xA;from PVGPpy.filt import pointsToTube&#xA;# Get input/output of Proxy&#xA;pdi = self.GetInput()&#xA;pdo = self.GetOutput()&#xA;# Grab input arrays to process from drop down menus&#xA;#- Grab all fields for input arrays:&#xA;fields = []&#xA;for i in range(4):&#xA;    fields.append(inputhelp.getSelectedArrayField(self, i))&#xA;#- Simply grab the names&#xA;names = []&#xA;for i in range(4):&#xA;    names.append(inputhelp.getSelectedArrayName(self, i))&#xA;# Pass array names and associations on to process&#xA;# Get the input arrays&#xA;wpdi = dsa.WrapDataObject(pdi)&#xA;arrs = []&#xA;for i in range(4):&#xA;    arrs.append(inputhelp.getArray(wpdi, fields[i], names[i]))&#xA;&#xA;# Get indices for TimeSteps&#xA;idcs = np.where(arrs[3] == 2)[0]&#xA;# grab coordinates for each part of boring machine at time idx as row&#xA;executive = self.GetExecutive()&#xA;outInfo = executive.GetOutputInformation(0)&#xA;idx = int(outInfo.Get(executive.UPDATE_TIME_STEP())/dt)&#xA;index = idcs[idx]&#xA;x = arrs[0][index]&#xA;y = arrs[1][index]&#xA;z = arrs[2][index]&#xA;center = (x,y,z)&#xA;pts = []&#xA;&#xA;# now compute unit vector.&#xA;def unitVec(s, g):&#xA;    # Direction Vector: Vector points from receiver to source&#xA;    vec = (s[0]-g[0], s[1]-g[1], s[2]-g[2])&#xA;    # Total spatial distance:&#xA;    dist = np.sqrt(vec[0]**2 + vec[1]**2 + vec[2]**2)&#xA;    # Get unit vector for direction&#xA;    return (vec[0]/dist, vec[1]/dist, vec[2]/dist)&#xA;&#xA;if idx == (len(idcs) - 1):&#xA;    # use vect between current and last different points&#xA;    iii = 1&#xA;    for i in range(1,idx):&#xA;        if arrs[0][idcs[idx-i]] != x or arrs[1][idcs[idx-i]] != y or arrs[2][idcs[idx-i]] != z:&#xA;            iii = i&#xA;            break&#xA;    index = idcs[idx-iii]&#xA;    vec = unitVec((arrs[0][index],arrs[1][index],arrs[2][index]), center)&#xA;else:&#xA;    # get vector from current point to next different point.&#xA;    iii = 1&#xA;    for i in range(1,len(idcs)-idx):&#xA;        if arrs[0][idcs[idx+i]] != x or arrs[1][idcs[idx+i]] != y or arrs[2][idcs[idx+i]] != z:&#xA;            iii = i&#xA;            break&#xA;    index = idcs[idx+iii]&#xA;    vec = unitVec(center, (arrs[0][index],arrs[1][index],arrs[2][index]))&#xA;&#xA;# Generate two more points Length/2 away in pos/neg unit vector direction&#xA;def genPts(vec, c, l):&#xA;    &quot;&quot;&quot;Generates two points l dist away from c in direction vec&quot;&quot;&quot;&#xA;    x1 = c[0] - (vec[0] * l)&#xA;    y1 = c[1] - (vec[1] * l)&#xA;    z1 = c[2] - (vec[2] * l)&#xA;    x2 = c[0] + (vec[0] * l)&#xA;    y2 = c[1] + (vec[1] * l)&#xA;    z2 = c[2] + (vec[2] * l)&#xA;    return ((x1,y1,z1), (x2,y2,z2))&#xA;&#xA;# append the points and done. 3 points total&#xA;add = genPts(vec, center, Length/2)&#xA;#- append neg first&#xA;pts.append(add[0])&#xA;#- append center&#xA;pts.append(center)&#xA;#- append pos last&#xA;pts.append(add[1])&#xA;&#xA;# Generate tube:&#xA;vtk_pts = vtk.vtkPoints()&#xA;for i in range(len(pts)):&#xA;    vtk_pts.InsertNextPoint(pts[i][0],pts[i][1],pts[i][2])&#xA;poly = vtk.vtkPolyData()&#xA;poly.SetPoints(vtk_pts)&#xA;pointsToTube(poly, radius=Diameter/2, numSides=20, nrNbr=False, pdo=pdo)&#xA;"
        panel_visibility="advanced">
        <Hints>
          <Widget type="multi_line" syntax="python"/>
        </Hints>
        <Documentation>This property contains the text of a python program that
        the programmable source runs.</Documentation>
        </StringVectorProperty>

      <StringVectorProperty
        name="InformationScript"
        label="RequestInformation Script"
        command="SetInformationScript"
        number_of_elements="1"
        default_values="from vtk.numpy_interface import dataset_adapter as dsa&#xA;import PVGPpy.helpers as inputhelp&#xA;import numpy as np&#xA;executive = self.GetExecutive()&#xA;outInfo = executive.GetOutputInformation(0)&#xA;pdi = self.GetInput()&#xA;# Calculate list of timesteps here&#xA;#- Get status array&#xA;field = inputhelp.getSelectedArrayField(self, 3)&#xA;name = inputhelp.getSelectedArrayName(self, 3)&#xA;wpdi = dsa.WrapDataObject(pdi)&#xA;statarr = inputhelp.getArray(wpdi, field, name)&#xA;idcs = np.where(statarr == 2)[0]&#xA;#- Get number of rows in table and use that for num time steps&#xA;xtime = np.arange(0,len(idcs)*dt,dt, dtype=float)&#xA;outInfo.Remove(executive.TIME_STEPS())&#xA;for i in range(len(xtime)):&#xA;    outInfo.Append(executive.TIME_STEPS(), xtime[i])&#xA;# Remove and set time range info&#xA;outInfo.Remove(executive.TIME_RANGE())&#xA;outInfo.Append(executive.TIME_RANGE(), xtime[0])&#xA;outInfo.Append(executive.TIME_RANGE(), xtime[-1])&#xA;"
        panel_visibility="advanced">
        <Hints>
          <Widget type="multi_line" syntax="python"/>
        </Hints>
        <Documentation>This property is a python script that is executed during
        the RequestInformation pipeline pass. Use this to provide information
        such as WHOLE_EXTENT to the pipeline downstream.</Documentation>
      </StringVectorProperty>


      <StringVectorProperty command="SetPythonPath"
                            name="PythonPath"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <Documentation>A semi-colon (;) separated list of directories to add to
        the python library search path.</Documentation>
      </StringVectorProperty>
    </SourceProxy>

    <!-- ./tunneling//filter_animate_tbm.py -->
    <SourceProxy name="AnimateTBM" class="vtkPythonProgrammableFilter" label="Animate Tunnel Boring Machine">
      <Documentation
        long_help="This filter analyzes a vtkTable containing position information about a Tunnel Boring Machine (TBM). This Filter iterates over each row of the table as a timestep and uses the XYZ coordinates of the three different parts of the TBM to generate a tube that represents the TBM."
        short_help="This filter analyzes a vtkTable containing position information about a Tunnel Boring Machine (TBM). This Filter iterates over each row of the table as a timestep and uses the XYZ coordinates of the three different parts of the TBM to generate a tube that represents the TBM.">
      </Documentation>
      <Hints>
        <ShowInMenu category="PVGP Tunneling" />
      </Hints>

      <!-- Built on version: 0.6.2 -->
      <StringVectorProperty
        panel_visibility="never"
        name="BUILDVERSION"
        label="BUILDVERSION"
        initial_string="BUILDVERSION"
        command="SetParameter"
        animateable="1"
        default_values="0.6.2"
        number_of_elements="1">
        <Documentation>This is an attribute to the filter to know what version it was built on. This is necessary for plugins that have major changes across versions and might need to alert a user that their state file is out of date.</Documentation>
      </StringVectorProperty>

      <!-- Output data type: "vtkPolyData" -->
      <IntVectorProperty command="SetOutputDataSetType"
                         default_values="0"
                         name="OutputDataSetType"
                         number_of_elements="1"
                         panel_visibility="never">
        <Documentation>The value of this property determines the dataset type
        for the output of the programmable filter.</Documentation>
      </IntVectorProperty>
    <DoubleVectorProperty
      name="TimestepValues"
      repeatable="1"
      information_only="1">
      <TimeStepsInformationHelper/>
          <Documentation>
          Available timestep values.
          </Documentation>
    </DoubleVectorProperty>


      <InputProperty
        name="Input"
        command="SetInputConnection">
          <ProxyGroupDomain name="groups">
            <Group name="sources"/>
            <Group name="filters"/>
          </ProxyGroupDomain>

          <DataTypeDomain name="input_type">
            <DataType value="vtkTable"/>
          </DataTypeDomain>
      </InputProperty>

      <StringVectorProperty
        name="SelectInputScalars0"
        label="Head Easting"
        command="SetInputArrayToProcess"
        default_values="0 NULL"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        animateable="0">
        <ArrayListDomain
          name="array_list"
          attribute_type="Scalars"
          input_domain_name="inputs_array">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain
          name="field_list">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>


      <StringVectorProperty
        name="SelectInputScalars1"
        label="Head Northing"
        command="SetInputArrayToProcess"
        default_values="1 NULL"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        animateable="0">
        <ArrayListDomain
          name="array_list"
          attribute_type="Scalars"
          input_domain_name="inputs_array">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain
          name="field_list">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>


      <StringVectorProperty
        name="SelectInputScalars2"
        label="Head Elevation"
        command="SetInputArrayToProcess"
        default_values="2 NULL"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        animateable="0">
        <ArrayListDomain
          name="array_list"
          attribute_type="Scalars"
          input_domain_name="inputs_array">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain
          name="field_list">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>


      <StringVectorProperty
        name="SelectInputScalars3"
        label="Arti Easting"
        command="SetInputArrayToProcess"
        default_values="3 NULL"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        animateable="0">
        <ArrayListDomain
          name="array_list"
          attribute_type="Scalars"
          input_domain_name="inputs_array">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain
          name="field_list">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>


      <StringVectorProperty
        name="SelectInputScalars4"
        label="Arti Northing"
        command="SetInputArrayToProcess"
        default_values="4 NULL"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        animateable="0">
        <ArrayListDomain
          name="array_list"
          attribute_type="Scalars"
          input_domain_name="inputs_array">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain
          name="field_list">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>


      <StringVectorProperty
        name="SelectInputScalars5"
        label="Arti Elevation"
        command="SetInputArrayToProcess"
        default_values="5 NULL"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        animateable="0">
        <ArrayListDomain
          name="array_list"
          attribute_type="Scalars"
          input_domain_name="inputs_array">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain
          name="field_list">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>


      <StringVectorProperty
        name="SelectInputScalars6"
        label="Tail Easting"
        command="SetInputArrayToProcess"
        default_values="6 NULL"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        animateable="0">
        <ArrayListDomain
          name="array_list"
          attribute_type="Scalars"
          input_domain_name="inputs_array">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain
          name="field_list">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>


      <StringVectorProperty
        name="SelectInputScalars7"
        label="Tail Northing"
        command="SetInputArrayToProcess"
        default_values="7 NULL"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        animateable="0">
        <ArrayListDomain
          name="array_list"
          attribute_type="Scalars"
          input_domain_name="inputs_array">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain
          name="field_list">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>


      <StringVectorProperty
        name="SelectInputScalars8"
        label="Tail Elevation"
        command="SetInputArrayToProcess"
        default_values="8 NULL"
        number_of_elements="5"
        element_types="0 0 0 0 2"
        animateable="0">
        <ArrayListDomain
          name="array_list"
          attribute_type="Scalars"
          input_domain_name="inputs_array">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <FieldDataDomain
          name="field_list">
          <RequiredProperties>
            <Property
              name="Input"
              function="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>




      <DoubleVectorProperty
        panel_visibility="default"
        name="Diameter"
        label="Diameter"
        initial_string="Diameter"
        command="SetParameter"
        animateable="1"
        default_values="17.45"
        number_of_elements="1">
        <Documentation></Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty
        panel_visibility="default"
        name="dt"
        label="dt"
        initial_string="dt"
        command="SetParameter"
        animateable="1"
        default_values="1.0"
        number_of_elements="1">
        <Documentation></Documentation>
      </DoubleVectorProperty>

      <StringVectorProperty
        name="Script"
        command="SetScript"
        number_of_elements="1"
        default_values="import numpy as np&#xA;from vtk.numpy_interface import dataset_adapter as dsa&#xA;import PVGPpy.helpers as inputhelp&#xA;from PVGPpy.filt import pointsToTube&#xA;# Get input/output of Proxy&#xA;pdi = self.GetInput()&#xA;pdo = self.GetOutput()&#xA;# Grab input arrays to process from drop down menus&#xA;#- Grab all fields for input arrays:&#xA;fields = []&#xA;for i in range(3):&#xA;    fields.append(inputhelp.getSelectedArrayField(self, i))&#xA;#- Simply grab the names&#xA;names = []&#xA;for i in range(9):&#xA;    names.append(inputhelp.getSelectedArrayName(self, i))&#xA;# Pass array names and associations on to process&#xA;# Get the input arrays&#xA;wpdi = dsa.WrapDataObject(pdi)&#xA;arrs = []&#xA;for i in range(9):&#xA;    arrs.append(inputhelp.getArray(wpdi, fields[i], names[i]))&#xA;&#xA;# grab coordinates for each part of boring machine at time idx as row&#xA;executive = self.GetExecutive()&#xA;outInfo = executive.GetOutputInformation(0)&#xA;idx = int(outInfo.Get(executive.UPDATE_TIME_STEP())/dt)&#xA;pts = []&#xA;for i in range(3):&#xA;    x = arrs[i*3][idx]&#xA;    y = arrs[i*3+1][idx]&#xA;    z = arrs[i*3+2][idx]&#xA;    pts.append((x,y,z))&#xA;# now exectute a points to tube filter&#xA;vtk_pts = vtk.vtkPoints()&#xA;for i in range(len(pts)):&#xA;    vtk_pts.InsertNextPoint(pts[i][0],pts[i][1],pts[i][2])&#xA;poly = vtk.vtkPolyData()&#xA;poly.SetPoints(vtk_pts)&#xA;pointsToTube(poly, radius=Diameter/2, numSides=20, nrNbr=False, pdo=pdo)&#xA;"
        panel_visibility="advanced">
        <Hints>
          <Widget type="multi_line" syntax="python"/>
        </Hints>
        <Documentation>This property contains the text of a python program that
        the programmable source runs.</Documentation>
        </StringVectorProperty>

      <StringVectorProperty
        name="InformationScript"
        label="RequestInformation Script"
        command="SetInformationScript"
        number_of_elements="1"
        default_values="import numpy as np&#xA;executive = self.GetExecutive()&#xA;outInfo = executive.GetOutputInformation(0)&#xA;# Calculate list of timesteps here&#xA;#- Get number of rows in table and use that for num time steps&#xA;nrows = int(self.GetInput().GetColumn(0).GetNumberOfTuples())&#xA;xtime = np.arange(0,nrows*dt,dt, dtype=float)&#xA;outInfo.Remove(executive.TIME_STEPS())&#xA;for i in range(len(xtime)):&#xA;    outInfo.Append(executive.TIME_STEPS(), xtime[i])&#xA;# Remove and set time range info&#xA;outInfo.Remove(executive.TIME_RANGE())&#xA;outInfo.Append(executive.TIME_RANGE(), xtime[0])&#xA;outInfo.Append(executive.TIME_RANGE(), xtime[-1])&#xA;"
        panel_visibility="advanced">
        <Hints>
          <Widget type="multi_line" syntax="python"/>
        </Hints>
        <Documentation>This property is a python script that is executed during
        the RequestInformation pipeline pass. Use this to provide information
        such as WHOLE_EXTENT to the pipeline downstream.</Documentation>
      </StringVectorProperty>


      <StringVectorProperty command="SetPythonPath"
                            name="PythonPath"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <Documentation>A semi-colon (;) separated list of directories to add to
        the python library search path.</Documentation>
      </StringVectorProperty>
    </SourceProxy>
  </ProxyGroup>
</ServerManagerConfiguration>